{"version":3,"sources":["Navigation.js","pages/Introduction.js","images/syslog.png","pages/Dev.js","images/mclog.png","pages/Problem.js","pages/Summary.js","images/elk.svg","images/elkflow.png","images/graylog_tools.png","images/filebeat.png","pages/Tech.js","pages/Timeline.js","images/prompt.png","images/kibana-start.png","images/menu.png","images/search.png","images/indices.png","images/manage-ind.png","images/createpattern.png","images/indexpatterns.png","images/discover.png","images/query.png","images/resp.png","images/message.png","images/kql.png","images/kibana-dash.png","images/nginx-dash.png","images/dashboard1.png","images/dashboard2.png","images/pipelines.png","images/grokdebug.png","images/bej.JPG","images/alert_not1.JPG","images/alert_not2.JPG","images/beats_inupt2.JPG","images/Beats_input.JPG","images/dash_1.JPG","images/dash_2.JPG","images/dash_3.JPG","images/inputs_1.JPG","images/index1.JPG","images/kezdolap.JPG","images/stream.JPG","images/user_create.JPG","images/user_overw.JPG","pages/Usermanual.js","images/user_testuser.JPG","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","Toggle","Collapse","id","Nav","Link","as","to","Introduction","className","Badge","target","rel","href","ListGroup","numbered","ListGroupItem","Alert","Heading","Dev","src","syslog","width","Problem","kep","alt","Summary","Table","striped","bordered","hover","style","marginTop","colSpan","Tech","colspan","elkflow","float","elk","filebeat","graylog","height","Timeline","contentStyle","background","color","contentArrowStyle","borderRight","date","iconStyle","icon","Usermanual","prompt","kibanastart","menu","search","indices","manageind","createpattern","indexpatterns","discover","kql","query","resp","message","grokdebug","kibanadash","nginxdash","dashboard1","dashboard2","pipelines","bej","kezdolap","stream","alert_not1","alert_not2","dash_1","dash_2","dash_3","inputs_1","beats_inupt2","user_overw","user_create","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8476412f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nfunction Navigation() {\n  return (\n    <>\n      <Navbar collapseOnSelect expand='sm' bg='dark' variant='dark'>\n        <Container>\n          <Navbar.Brand>Centralized Log Server</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav>\n              <Nav.Link as={Link} to='/'>Bevezető</Nav.Link>\n              <Nav.Link as={Link} to='/problem'>Probléma</Nav.Link>\n              <Nav.Link as={Link} to='/tech'>Technológia</Nav.Link>\n              <Nav.Link as={Link} to='/usermanual'>Felhasználói bemutatás</Nav.Link>\n              <Nav.Link as={Link} to='/dev'>Installáció, konfigurációk bemutatása</Nav.Link>\n              <Nav.Link as={Link} to='/timeline'>Munkafolyamatok</Nav.Link>\n              <Nav.Link as={Link} to='/summary'>Összegzés</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    \n    </>\n  );\n}\n\nexport default Navigation;","import React from 'react'\nimport { Container, Badge, Alert, ListGroupItem, ListGroup } from 'react-bootstrap';\n\nconst Introduction = () => {\n    return (\n        <Container className=\"mt-5\">\n            <h2>\n                <Badge bg=\"secondary\">1.</Badge> Bevezető \n            </h2>\n            <hr></hr>\n            <p className=\"mt-2\">\n                Szinte mindegyik operációs rendszer, alkalmazás vagy hálózati eszköz generál naplófájlokat. Ezek a fájlok rögzítik az operációs rendszerben bekövetkezett eseményeket,\n                szoftverfuttatásokat, vagy felhasználók közötti üzeneteket. A naplófájlokból rengeteg információt megtudhatunk, ezért is fontosak. Ki / Mi? Mikor? Hol? készítette, mennyire súlyos, vagy esetleg\n                csak informatív jellegű. \n            </p>\n            <p className='mt-2'>\n                Képzeljük, csak el, hogy egy vállalati környezetben működő szerverek, azok szolgáltatásai, webes alkalmazások, asztali alkalmazások mennyi naplófájlt generálnak.\n                Lehetetlenség külön minden forrásra figyelni, reagálni a hibákra.\n                Jó lenne egy olyan megoldást találni, mellyel ezeket a logokat egy központi rendszerbe lehet gyűjteni, és emberi szem számára kellemes formában lekérdezhetőek, elemzések készíthetőek.\n            </p>\n           \n            <p className=\"mt-2\">\n                A <a className='link-style' target=\"_blank\" rel='noopener noreferrer' href=\"https://www.linkedin.com/company/cyansecurity/?originalSubdomain=hu\"> cyan Security Group</a> cégcsoport open-source biztonsági megoldásokat kínál. Rendszerei különböző naplófájlokat generálnak, viszont jelenleg nincs központosított naplószerverük, illetve voltak próbálkozások, de nem volt egyértelmű, hogy melyik technológiai megoldás lenne a legoptimálisabb.\n                A cél egy olyan környezet létrehozása, amely felel a naplófájlok közös gyűjtéséért, hogy azokat a jövőben gördülékenyen lehessen elemezni, mindezt <a href='https://ubuntu.com/' className='link-style' target=\"_blank\">Linux (Ubuntu)</a>  alapokon.\n            </p>\n            <p className=\"mt-2\">\n                A témával hárman foglalkoztunk (Rácz Máté, Mandl Ábel, Horváth Bálint) és mindhárman különböző modern és ingyenes technológiával dolgoztunk,\n                ugyanakkor a megoldásainkban vannak közös pontok is. \n                A továbbiakban olvashatóak az eddigi tapasztalataink és megfigyeléseink. Ki fogunk téreni egyes rendszerek előnyeire és hátrányaira is.\n               \n            </p>\n            <h3>A dokumentáció felosztása</h3>\n            <ListGroup as=\"ol\" numbered className='mb-3'>\n                    <ListGroupItem as=\"li\">\n                        Probléma leírása\n                    </ListGroupItem>\n                    <ListGroupItem as=\"li\">\n                        Felhasznált technológiák listázása\n                    </ListGroupItem>\n                    <ListGroupItem as=\"li\">\n                        \"Felhasználói\" bemutatás\n                    </ListGroupItem>\n                    <ListGroupItem as=\"li\">\n                        Konfigurációk bemutatása\n                    </ListGroupItem>\n                    <ListGroupItem as=\"li\">\n                        Idővonal (Roadmap)\n                    </ListGroupItem>\n                    <ListGroupItem as=\"li\">\n                        Összegzés\n                    </ListGroupItem>\n                </ListGroup>\n            <Alert variant='warning'>\n                <Alert.Heading>Megjegyzés</Alert.Heading>\n                Az eddig szerzett tudásunk Linux-alapú rendszerekről korlátozott, így a munka nagy részét a Linux-szal való ismerkedés tette ki, ezáltal több kérdés nyitva maradt a jövőre nézve.</Alert>\n        </Container>\n    )\n}\nexport default Introduction","export default __webpack_public_path__ + \"static/media/syslog.c3c062e5.png\";","import React from 'react';\nimport { Container, Badge, Alert } from 'react-bootstrap';\nimport syslog from '../images/syslog.png'\nconst Dev = () => {\n    return (\n        <Container className='mt-5'>\n            <h2>\n                <Badge bg=\"secondary\">5.</Badge> Installáció, konfigurációk bemutatása\n            </h2>\n            <hr></hr>\n            <h3>Elastic Stack telepítése, tesztelése</h3>\n            <Alert><Alert.Heading as='h5'>Megjegyzés</Alert.Heading>Az alapkomponensek telepítése nagyrészt\n             a <a href='https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html' className='link-style' target=\"_blank\">dokumentációk</a> követésével valósult meg.\n             \n            </Alert>\n            <h5>Előkészületek, függőségek telepítése</h5>\n            Amire szükségünk van:\n            <ul>\n                <li>Linux-alapú rendszer (esetünkben Ubuntu)</li>\n                <li>Terminálhozzáférés</li>\n                <li>Felhasználó sudo vagy root jogokkal</li>\n                <li>Java 8 minimum</li>\n            </ul>\n            <h6>1. Java telepítése</h6>\n            <p>Az Elastic Stack Java alapú, szükséges a Java 8 telepítése, az alábbi paranccsal:</p>\n            <code>sudo apt install openjdk-8-jdk</code>\n            <p className='mt-3'>Ellenőrzés:</p>\n            <code>java -version</code>\n            <h6 className='mt-3'>2. Nginx telepítése</h6>\n            <p>Az Nginx-et legtöbbet webszerverként ismerhetik, mi a proxy modulját fogjuk használni\n                és jelszó-alapú hozzáférést fog biztosítani a Kibana felülethez. (Reverse Proxy)</p>\n                <code>sudo apt install nginx</code>\n            <h6 className='mt-3'>3. Elastic repository hozzáadása</h6>\n            <p>Elérhetővé kell tennünk az összes, a Stack-et alkotó szolgáltatást a csomagkezelőnk számára.</p>\n            <code>wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -<br></br>\n                sudo apt install apt-transport-https<br></br>\n                echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | sudo tee –a /etc/apt/sources.list.d/elastic-7.x.list</code>\n            <h5 className='mt-3'>Komponensek telepítése</h5>\n            <h6>1. Elasticsearch</h6>\n            <p>Frissítsük a repokat, majd telepítsünk.</p>\n            <code>sudo apt update<br></br>\n                sudo apt install elasticsearch</code>\n                <h6 className='mt-3'>Konfigurálás:</h6>\n                <code>sudo nano /etc/elasticsearch/elasticsearch.yml</code>\n                <p>Nem szükséges konfiguráció még.</p>\n                <h6 className='mt-3'>Indítás, rebootkor induljon el:</h6>\n                <code>\n                sudo systemctl start elasticsearch.service<br></br>\n                sudo systemctl enable elasticsearch.service\n                </code>\n                <h6 className='mt-3'>Teszteljük!</h6>\n                <code>curl -X GET \"localhost:9200\"</code>\n                <h6 className='mt-3'>Response</h6>\n                <pre>\n                    <code>\n                        {`{\n  \"name\" : \"UNI-Server02\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"cluster_uuid\" : \"MqXDWDieRfKm9Wqnu2Xwpg\",\n  \"version\" : {\n    \"number\" : \"7.16.1\",\n    \"build_flavor\" : \"default\",\n    \"build_type\" : \"deb\",\n    \"build_hash\" : \"5b38441b16b1ebb16a27c107a4c3865776e20c53\",\n    \"build_date\" : \"2021-12-11T00:29:38.865893768Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"8.10.1\",\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\n    \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}`}\n                    </code>\n                </pre>\n                <h6 className='mt-3'>2. Kibana</h6>\n                <p>A webes interfész telepítése következik, amivel elérhetőek lesznek a logok, azok menedzselése, analízise.</p>\n                <code>sudo apt install kibana</code>\n                <h6 className='mt-3'>Konfigurációs út</h6>\n                <code>sudo nano /etc/kibana/kibana.yml</code>\n                <p>Ezt is hagyjuk még így.</p>\n                <h6>Indítás</h6>\n                <code>sudo systemctl start kibana<br></br>\n                sudo systemctl enable kibana</code>\n                <p>Ezek után már elérhető a böngészőnkből: http://localhost:5601</p>\n                <h6>3. Logstash</h6>\n                <code>sudo apt install logstash <br></br>\n                sudo systemctl start logstash<br></br>\n                sudo systemctl enable logstash</code>\n               <p className='mt-3'> Csináljunk egy alap pipeline-t, amely az összes filebeat által küldött adatot továbbítja az elasticsearch-nek.\n                Ehhez a <code>/etc/logstash/conf.d/</code> helyen létre kell hoznunk egy .conf fájlt, nevezzük el mondjuk  <code>beats.conf</code> -ként\n                (<i>egyébként egy számunkra megfelelő minta konfiguráció megtalálható itt:<code>/etc/logstash/logstash-sample.conf</code>, ezt másolhatjuk a megfelelő helyre</i>).\n                A fájl tartalma ez:</p>\n                <pre>\n                    <code>\n                        {`input {\n  beats {\n    port => 5044\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"http://localhost:9200\"]\n    manage_template => false\n    index => \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n    document_type => \"%{[@metadata][type]}\"`}\n                    </code>\n                </pre>\n                <h6>4. Filebeat</h6>\n                <p>A Filebeat egy lightweight plugin logfájlok gyűjtésére és szállítására.\n                Különlegessége, hogy tud lassítani a tempón, ha Logstash megtelt adattal.\n                További Beats modulok pl. Auditbeat, Heartbeat, Metricbeat. Telepítsük!</p>\n                <code>sudo apt install filebeat</code>\n                <p className='mt-3'><b>Konfigurálás</b>: A Filebeat alapértelmezetten egyből az Elasticsearch-nek továbbít, mi szeretnénk ha az adatainkon még a Logstash dolgozna.</p>\n                <code>sudo nano /etc/filebeat/filebeat.yml</code><br></br>\n                Az <i>Elasticsearch output</i> szekcióban az alábbi sorokat kell kommentbe helyezni:\n                <pre className='mt-3'>\n                    <code>\n                        {`# output.elasticsearch:\n   # Array of hosts to connect to.\n   # hosts: [\"localhost:9200\"]`}\n                    </code>\n                </pre>\n                <p>A <i>Logstash output</i> szekcióban lévő sorokban meg kell szüntetni a hash jelet:</p>\n                <pre>\n                    <code>\n                        {`output.logstash\n     hosts: [\"localhost:5044\"]`}\n                    </code>\n                </pre>\n            <p>A konfiguráció elmentése után engedélyezzük a filebeat beépített modulját: <code>system</code>.\n            Ez az ágens fogja vizsgálni a helyi syslog fájlt.</p>\n            <code>sudo filebeat modules enable system</code>\n            <Alert variant='info'><Alert.Heading as='h6'>Ez mit csinál?</Alert.Heading>\n            Az előre megírt modulok az <code>/etc/filebeat/modules.d</code> helyen találhatóak. Alapértelmezetten egy .disabled tag jelöli, hogy \n            nincsenek alkalmazva.\n            A filebeat modules enable parancs ezt a tag-et veszi le a kívánt modulokról, és a filebeat.yml ezekből olvassa be az utasításokat.\n            </Alert>\n            <p className='mt-3'><b>Index template betöltése</b>: A logokat különböző indexek szerint rendezi a rendszer.\n            A parancs által kapcsolódik a rendszerünk a Kibana felülethez, és az index előállítás is végbemegy.</p>\n            <code>sudo filebeat setup -e \\<br></br>\n            -E output.logstash.enabled=false \\<br></br>\n            -E output.elasticsearch.hosts=['localhost:9200'] \\<br></br>\n            -E setup.kibana.host=localhost:5601<br></br>\n            <br></br>\n            sudo systemctl start filebeat<br></br>\n            sudo systemctl enable filebeat</code>\n            <p className='mt-3'>Ellenőrizzük, hogy az Elasticsearch kap-e adatot az indexek listázásval!</p>\n            <code>curl -XGET http://localhost:9200/_cat/indices?v</code>\n            <h5 className='mt-3'>További lépések</h5>\n            <p>A Stack minden eleme feltelepült. Következő lépésként a Kibana felületén hozzunk létre egy index pattern-t,\n            amely alapján tudjuk gyűjteni az indexeinket.\n            Innentől a logfájljaink elérhetőek, akár a Discover menün keresztül.</p>\n            <h6>Nginx reverse proxy</h6>\n            <p> A biztonság növelése érdekében a legegyszerűbb módot alkalmazzuk:\n            Egy proxyt teszünk a Kibana elé, amely egy alap felhasználói autentikációt kér.</p>\n            <code>\n            sudo systemctl enable nginx <br></br>\n            sudo nano /etc/nginx/sites-available/kibana\n            </code>\n            <pre>\n                <code>\n                    {`server {\n    listen 80;\n    server_name <server-IP-hostname>;\n\n    location / {\n        proxy_pass http://localhost:5601;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;        \n    }\n}`}\n                </code>\n            </pre>\n            <p>A {`<server-IP-hostname>`} helyére a fizikai interfészünk címe (vagy hostname) kerüljön.</p>\n            <h6>Hibaellenőrzés:</h6>\n            <code>sudo nginx -t</code>\n            <h6 className='mt-3'>Kibana site engedélyezése és a default config lecserélése:</h6>\n            <code>sudo ln -s /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/<br></br>\n                sudo unlink /etc/nginx/sites-enabled/default<br></br>\n                systemctl restart nginx</code>\n                <p>Most már a böngészőnkből a Kibana-t a 80-as porton érjük el (http://localhost)</p>\n                <h6>Alap autentikáció elérése</h6>\n                <code>\n                sudo apt install apache2-utils\n                </code>\n                <p>Ez egy jelszó-fájl létrehozó utility, amely segíteni fog nekünk,\n                     hogy az Nginx a létrehozott fájlból hitelesíti a felhasználót.</p>\n                <code>sudo htpasswd -c /etc/nginx/.kibana user2</code>\n                <p>Itt létrehoztunk egy új felhasználót, aki hozzá tud majd férni a Kibanahoz.\n                Adjuk hozzá a Kibana site konfigurációhoz az alábbi két sort:</p>\n                <pre><code>\n                    {`auth_basic \"Restricted Access\";\nauth_basic_user_file /etc/nginx/.kibana;`}</code></pre>\n            <p>Az Nginx logokat egyszerűen monitorozhatjuk a filebeat <code>nginx</code> moduljának bekapcsolásával:\n            </p>\n            <code>sudo filebeat modules enable nginx<br></br>\n            sudo systemctl restart filebeat</code>\n            <p>További modulok listázáshoz:</p>\n            <code>sudo filebeat modules list</code>\n            <h6 className='mt-3'>Kliensek figyelése</h6>\n            <p>Ezek után az nginx naplófájlok (access, error) is meg fognak jelenni a webes felületen.</p>\n            <p>Lépjük ki a localhost zónából és gyűjtsünk logokat külső szerverekről.\n            Elegendő csak a Filebeat-et telepíteni (akkor ha logfájlok gyűjtésére van szükségünk,\n            további lehetőségekért ld. <a href='https://www.elastic.co/beats/'>Beats modulok</a>).   </p>     \n\n            <code> curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.16.1-amd64.deb<br></br>\n  sudo dpkg -i filebeat-7.16.1-amd64.deb</code>\n\n           <p>A csomag telepítése után csatlakoztatni kell a kliensgépet az Elastic Stack-hez.\n            Ehhez szerkesztenünk kell a <code>filebeat.yml</code> fájlt.\n            A szerver Logstash elérését kell megadni outputként és az Elasticsearch kimenetet kikommentezni.</p> \n\n            <pre>\n                <code>\n                    {`#output.elasticsearch:\n#hosts: [\"localhost:9200\"]`}\n                </code>\n            </pre>\n            <pre>\n                <code>\n                    {`output.logstash:\nhosts: [\"elastic-host-ip:5044\"]`}\n                </code>\n            </pre>\n            <p>\n            Engedélyezzük a kívánt modulokat:\n            </p>\n            <code>\n            sudo filebeat modules enable system nginx\n            </code>\n            <h6 className='mt-3'>Filebeat metrics logging érdekesség</h6>\n            <p>A Filebeat alapértelmezetten fél percenként küld egy különböző metrikákat tartalmazó fájlt.\n            Az a gond, hogy valamiért ezek a naplósorok bekerülnek valamiért a syslog-ba is, arról nem is szólva, hogy az Elasticsearch is ezen fájlokkal terhelődik és lényegi információt nem nyújtanak.\n            A funkció kikapcsolására tett kísérlet nem járt sikerrel, a logolási periódus növelése sem,\n            az alábbi sorok beillesztése a <code>filebeat.yml</code> fájlokba (minden hoston) megoldotta a problémát:</p>\n            <pre>\n                <code>\n                    {`logging:\n level: info\n to_files: true\n to_syslog: false`}\n\n           \n                </code>\n            </pre>\n            <h6>Syslog severity, facility kinyerése</h6>\n            <p>Fontos lehet a logok súlyossági szintjének megfelelő lekérdezéseket gyártani,\n                ehhez valahogyan meg kéne tudnunk egyes logok milyen szintűek.\n                A probléma az volt hogy a <code>syslog</code> fájlban nem szerepelt a priority mező amiből tudnánk meghatározni a facility és severity levelt. Ahhoz, hogy tudjunk priority-t generálni a <code>syslog</code> sorokhoz az <code>rsyslog</code>-ot kellett segítségül hívni.\n                Mivel az alap template nem felel meg (a pri hiányában) ezért csinálnunk kell egyet (hely: <code>rsyslog.conf</code>):</p>\n                <pre>\n                    {`$template TraditionalFormatWithPRI,\"%pri% %timegenerated% %HOSTNAME% %syslogtag%%msg:::drop-last-lf%\\n\"\n$ActionFileDefaultTemplate TraditionalFormatWithPRI`}\n                </pre>\n                <p>A Logstash filter pedig így alakul:</p>\n                <pre>\n                    {`filter {\n if [event][module] == \"system\" {\n   grok {\n     match => { \"message\" =>\"%{POSINT:syslog_pri} %{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\\[%{POSINT:syslog_pid}\\])?: %{GREEDYDATA:syslog_message}\" }\n\n   }\n   syslog_pri { }\n   date {\n     match => [ \"syslog_timestamp\", \"MMM  d HH:mm:ss\", \"MMM dd HH:mm:ss\" ]\n   }\n\n }`}\n                </pre>\n                <Alert>\n                    <Alert.Heading as='h6'>{`syslog_pri { }`}</Alert.Heading>\n                    A syslog_pri {`{ }`} filter plugin segít nekünk olvasható formában kinyerni a severity és facility levelt. Most már bekerülnek ezek a mezők is az Elasticsearch-be.\n                </Alert>\n                <img src={syslog} width=\"50%\"></img>\n                <h6>Webes access, error logok feldolgozása</h6>\n                <p>Azt már látjuk, hogy ha specifikus adatokra van szükségünk, akkor szükséges a Logstash használata, hiszen alapértelmezésben a nyers logok kerülnek továbbításra. Szinte mindenhol igény mutatkozik Apache, Nginx logsorok feldolgozására. Fontos tehát ismernünk, hogy hogyan néz ki egy ilyen sor. Itt jön képbe a Grok Debugger eszköz, amely egyszerűbbé teszi a minták írását. El kell döntenünk, milyen mezőkre van szükségünk, majd a grok pattern-t mintalogokra illesztjük,\n                 és megfigyeljük milyen adatot tudtunk exportálni. Általában access logokra elegendő a {`%{COMBINEDAPACHELOG}`} minta.</p>\n                <p>A logstash filterben az alábbi elágazásokat írhatjuk:</p>\n                <pre>\n                    {`if [event][module] == \"nginx\" {\n   if [fileset][name] == \"access\" {\n     grok {\n       match => { \"message\" => \"%{COMBINEDAPACHELOG}\"  }\n       remove_field => [ \"message\" ]\n     }\n}\n if [event][module] == \"apache\" {\n   if [fileset][name] == \"access\" {\n     grok {\n       match => { \"message\" => \"%{COMBINEDAPACHELOG}\"  }\n       remove_field => [ \"message\" ]\n     }\n   }`}\n                </pre>\n                <p>Azonban az error logoknál, a lényegre: a log levelre vagyunk kíváncsiak, ehhez a minta például:</p>\n                <pre>\n                    {`else if [fileset][name] == \"error\" {\n     grok {\n       match => { \"message\" => [\"%{DATA:time} \\[%{DATA:log_level}\\] %{NUMBER:pid}#%{NUMBER:tid}: (\\*%{NUMBER:connection_id} )?%{GREEDYDATA:messageTmp}\"] }\n       remove_field => \"message\"\n     }\n mutate {\n       rename => {\"messageTmp\" => \"message\"}\n     }\n }`}\n                </pre>\n                <h6>Hatékonyabb indexelés</h6>\n                <p>Különválaszthatjuk a webes és a rendszerre vonatkozó logokat, olyan módon például, hogy a system logok kapnak egy plusz taget, megjelölve, hogy ők a rendszerlogok, és ugyanígy a webeseknél. Majd az output plugin-nál\n                     ezeket a tag-ek alapján szét lehet választani indexekbe. Értelemszerűen külön-külön index pattern-t kell létrehozni.</p>\n                     <pre>\n                         {`...\nmutate {\n    add_tag => [\"syslog\"]\n}\n...`}\n                     </pre>\n                     <pre>\n                         {`output {\n if \"syslog\" in [tags] {\n     elasticsearch {\n       hosts => [\"localhost:9200\"]\n       index => \"syslog-%{+YYYY.MM.dd}\"\n    }\n }`}\n                     </pre>\n                     <h6>Eldobás</h6>\n                     <p>Tulajdonképpen ha az informális logokra nincsen szükségünk azokat eldobhatjuk így:</p>\n                     <pre>\n                         {`...\nif [syslog_severity] == \"informational\" {\n       drop { }\n}\n...`}\n                     </pre>\n                     <p>Így csak az igazán sürgős adatokat fogjuk látni.</p>\n            <h3>EFK Stack</h3>\n            <h5>FluentD telepítése, konfigurálása</h5>\n            <p>Az Elasticsearch és a Kibana feltelepítése majd konfigurálása után rátérhetünk a <b>fluentd</b>-re.\n            A fluentd stabil változatán a Treasure Data Inc. végzi a folyamatos karbantartást. A fluentd a Ruby nyelvben készült, de a teljesítményérzékeny részeket\n            C nyelven írták meg. Előfordulhat viszont, hogy egy Ruby démon telepítése néhány felhasználónak gondot okoz, ezért a cég biztosítja a fluentd stabil terjesztését, a <b>td-agent</b>-et.        \n            </p>\n            <h5>FluentD telepítése és ellenőrzése</h5>\n            <code>curl -fsSL https://toolbelt.treasuredata.com/sh/install-ubuntu-focal-td-agent4.sh | sh</code>\n            <p>Telepítés után ellenőrizzük fut-e a szolgáltatás:\n            <code>\n                <br></br>sudo systemctl status td-agent\n            </code>\n            </p>\n            <p>\n                <b>Kimenet:</b>\n            </p>\n            <pre>{` \n            ● td-agent.service - td-agent: Fluentd based data collector for Treasure Data\n            Loaded: loaded (/lib/systemd/system/td-agent.service; disabled; vendor preset: enabled)\n            Active: active (running) since Thu 2021-10-07 15:12:27 PST; 6min ago\n                Docs: https://docs.treasuredata.com/articles/td-agent\n            Process: 53192 ExecStart = /opt/td-agent/embedded/bin/fluentd --log /var/log/td-agent/td-agent.log --daemon /var/run/td-agent/td-agent.pid (code = exited, statu\n            Main PID: 53198 (fluentd)\n            CGroup: /system.slice/td-agent.service\n                    ├─53198 /opt/td-agent/embedded/bin/ruby /opt/td-agent/embedded/bin/fluentd --log /var/log/td-agent/td-agent.log --daemon /var/run/td-agent/td-agent\n                    └─53203 /opt/td-agent/embedded/bin/ruby -Eascii-8bit:ascii-8bit /opt/td-agent/embedded/bin/fluentd --log /var/log/td-agent/td-agent.log --daemon /v\n\n            Dec 07 15:12:27 ubuntu systemd[1]: Starting td-agent: Fluentd based data collector for Treasure Data...\n            Dec 07 15:12:27 ubuntu systemd[1]: Started td-agent: Fluentd based data collector for Treasure Data.\n            `}</pre>\n            <p>\n                Látjuk, hogy a Fluentd elindult és aktív. A telepítés után érdemes beállítanunk, hogy egy esetleges szerver újraindulás után is, automatikusan elinduljon a fluentd:\n                <br>\n                </br>\n                <code>\n                    sudo systemctl enable td-agent\n                </code>\n            </p>\n            <h5>FluentD konfigurálása</h5>\n            <p>\n                A Fluentd konfigurálásához két fontos könyvtárra lesz szükségünk.<br></br>\n                <code>/var/log/td-agent/td-agent.log</code>, valamint a <code>/etc/td-agent/td-agent.conf</code><br></br>\n                Előbbi a fluentd naplóbejegyzéseit tárolja, utóbbi pedig a fluentd <b>konfigurációs</b> fájlja.\n            </p>\n            <p>\n                Végezzük el a fluentd konfigurálását. A szoftver konfigurálása tagekkel történik. Három fő tagel tudunk dolgozni a konfigurációs fájlba, ezek a következők:\n              \n                        <pre>{`\n                <source>\n                    @type syslog\n                    port 5140\n                    tag rsyslog\n                    bind 0.0.0.0\n                </source>\n                        `}</pre>\n                        <p>\n                            A source tagben tudjuk megjelölni a forrást. (Honnan érkezik az adat.) Ez lehet egy port, amin hallgatózunk, egy beat küldő alkalmazás (pl. <i>Filebeat</i>), vagy akár maga a fluentd is beolvashatja beépített <b>tail-in</b> pluginjának köszönhetően.\n                            A mi esetünkben, viszont elsődlegesen a legfontosabb a <b>rendszerlogok</b> feldolgozása volt. Ezeket sokféleképp bevihettük volna forrásként. A mi konfigurációnkba - egy beépített plugin - a <b>syslog-in</b>-t használtuk, ami tulajdonképpen az előbb említett tail plugin egy módosított megfelelője az egyszerűség és rugalmasság kedvéért.\n                            Jól látható, hogy itt még szerepel egy <b>tag</b> rész. Ennek az értéke bármi lehet, a későbbiekben lesz nagy jelentősége.\n                        </p>\n                   \n                        <pre>{`      \n                <filter rsyslog.*>\n                    @type record_transformer\n                    enable_ruby\n                    <record>\n                        hostname \"#{Socket.gethostname}\"\n                        tag {tag_parts[0]}\n                        facility {tag_parts[1]}\n                        severity {tag_parts[2]}\n                    </record>\n                </filter>\n                        `}</pre>\n                        <p>\n                            A filter tagben történhet a legtöbb dolog. Itt tudjuk a bejött adatot testreszabni. Beállíthatjuk többek között, hogy milyen adatokat szeretnénk ki parse-olni a fájlunkból. Ha több fajta logfájlunk van itt tudunk közöttünk 'összhangot' teremteni.\n                            Itt jön szerepbe a feljebb említett <b>tag</b> is. Minden egyes forrásnak megadhatunk egy egyedi azonosítót. (taget). Nálunk ez az 'rsyslog' lett tetszőlegesen.\n                            A filter tag ebben a konfigurációban tehát csak az rsyslog tag-el rendelkező logokra teljesül. Ha lenne egy másik konfigurációnk mondjuk <b>postgrelogs</b> taggel, arra külön filtert írhatunk.\n                            Az adatok 'kinyeréséhez' több megoldás is rendelkezésre áll a filter részben. Ilyen például grok, vagy regexp patternok használata, amik segítségével hosszú formátumokat dolgozhatunk ki adatainknak.\n                            A mi esetünkben, viszont a <b>record_transformer</b>-t használtuk. (A record_transformer is része a fluentd alap csomagjának.)\n                            Egy standard templatevel rendelkező logfájl két legfontosabb része a facility és a severity. Fentebb ezeket láthatjuk, ahogy 'kivettük' a beérkezett logból és megadott fieldbe csomagoltuk. Ezek mellett eltároltuk a taget, és egy hostnamet.\n                        </p>\n                   \n                        <pre>{`\n                <match rsyslog.*.*>\n                    @type elasticsearch\n                    host localhost\n                    port 9200\n                    logstash_format true\n                </match>   \n                        `}</pre>\n                        <p>\n                            A match tagben adjuk meg, hogy milyen adatbázisnak, analitikai motornak szeretnénk továbbítani a feldolgozott adatainkat. Ehhez egy kimenő portot, és az alkalmazás nevét adjuk meg. Itt látható, hogy típusnak az elasticsearch-öt adtuk meg.\n                            Ez az elasticsearch ugye ugyan ezen szerveren fut és a 9200-as porton hallgatózik.\n                            A <b>logstash_format</b> egy olyan attribútum, ami a logstash-hez hasonló formátumra alakítja a logfájlunkat. Ez az elasticsearchnél igen jól jöhet, mivel így biztosan kompatibilis lesz a logfájlunk az elastic stack-el.\n                            A logstash_format helyett természetesen használhatnánk json formatot is például (mondjuk ha MongoDB-vel dolgoznánk). Az egész attól is függ, milyen szoftvernek küldjük tovább az adatainkat.\n                        </p>\n                  \n            </p>\n            <p>Ugyan nem használtuk (csak teszteléskor), de a három main tag mellett létezik két fontos sub tag is a fluentd-hez.</p>\n           \n                <pre>{`\n        <parse>\n            @type regexp\n            # ...\n        </parse> \n                 `}</pre>\n                 <p>Ilyen a <b>parse</b> tag, amit a source és a filter tagben is használhatunk. Ilyen tagek közé kell írnunk a különböző formázó utasításainkat, ha pl. <i>regexp, grok</i> vagy más féle pattern-t használunk.</p>\n               \n                <pre>{`\n        <buffer>\n            @type file\n        </buffer>\n                 `}</pre>\n                 <p>Ilyen még a <b>buffer</b> tag, amit tesztelésnél pl. használatba vettem. A match tagben helyezhetjük el subtag-ként, ha a kimeneti szolgáltatás támogatja a pufferelést. Tökéletes különböző időzítések létrehozásához.</p>\n                \n            <p>\n                Természetesen még megannyi plugin tartozik a fluentd-hez, de úgygondolom a fontosakat összeszedtük.\n            </p>\n            <h5>Az rsyslog konfigurálása</h5>\n            <p>Az <b>rsyslog</b> nyílt forráskódú szoftver-segédprogram, amit az UNIX számítógépes rendszerek használnak naplóüzenetek továbbításához az IP hálózaton.</p>\n            <p>Az általunk készített EFK stack-ben is az rsyslogot használtuk, hogy továbbítsa a logokat a fluentd-nek.</p>\n            <p>Az rsyslog.conf fájl első sorába kell beírnunk a következő sort:</p>\n            <code>*.* @127.0.0.1:5140</code>\n            <p>Innentől a rendszer minden naplófájlt az <b>5140</b>-es portra fog küldeni. Fentebb a fluentd-nél ezt a portot adtuk meg forrásként, így már tesztelhetjük is a rendszert a Kibana-ban.</p>\n            <p>\n                Az rsyslog config fájlban még lehetőségünk van egyedi log template-t készíteni. Az alapértelmezett formátum:\n                <p>\n                    <code>$ActionFileDefaultTemplate TraditionalFileFormat</code>\n                </p>\n                <p>\n                    Ezt kitudjuk bővíteni plusz elemekkel, vagy esetleg JSON objektummá formálni. Például:\n                    <pre>{`\n            $ActionFileDefaultTemplate outfmt\n\n            template(name=\"outfmt\" type=\"list\" option.jsonf=\"on\") {\n                property(outname=\"@timestamp\" name=\"timereported\" dateFormat=\"rfc3339\" format=\"jsonf\")\n                property(outname=\"host\" name=\"hostname\" format=\"jsonf\")\n                property(outname=\"severity\" name=\"syslogseverity\" caseConversion=\"upper\" format=\"jsonf\" datatype=\"number\")\n                property(outname=\"facility\" name=\"syslogfacility\" format=\"jsonf\" datatype=\"number\")\n                property(outname=\"syslog-tag\" name=\"syslogtag\" format=\"jsonf\")\n                property(outname=\"source\" name=\"app-name\" format=\"jsonf\" onEmpty=\"null\")\n                property(outname=\"message\" name=\"msg\" format=\"jsonf\")\n\n            }  \n                    `}</pre>\n                    <br></br>\n                    <p>Kimenet: </p>\n                    <pre>{`{\"@timestamp\":\"2018-03-01T01:00:00+00:00\", \"host\":\"172.20.245.8\", \"severity\":7, \"facility\":20, \"syslog-tag\":\"tag\", \"source\":\"tag\", \"message\":\" msgnum:00000000:\"}`}</pre>\n                    <p>\n                        Ilyenkor értelemszerűen a fluentd-ben a <b>filter</b> tagben, már ehhez a formátumú bemenethez kell igazodnunk. Ezek a template-ek jól jöhetnek a rendszer későbbi <b>továbbfejlesztéséhez</b>.\n                    </p>\n                </p>\n            </p>\n            <h3>Graylog</h3>\n            <p> Első lépésben telepítjük a java környezetet, majd ellenőrizzük a verizót: </p>\n<code>sudo apt-get install openjdk-8-jre-headless<br></br>java -version</code>\n\n\n<h5 className='mt-3'>Elasticsearch telepítése: ld. feljebb </h5>\n<h5 className='mt-3'>Filebeat telepítése: ld. feljebb </h5>\n\n<h5 className='mt-3'>MongoDB telepítése  </h5>\n<p>A MongoDB a Graylog konfigurációjának a tárolásáért felel. Nem vesz részt a naplófájlok kezelésében.</p>\n<code>sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 <br></br>\necho \"deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list <br></br>\nsudo apt-get install -y mongodb-org</code>\n\n\n\n<h5 className='mt-3'>Graylog telepítése</h5>\n\n\n\n<code>wget https://packages.graylog2.org/repo/packages/graylog-4.2-repository_latest.deb<br></br>\n sudo dpkg -i graylog-4.2-repository_latest.deb<br></br>\nsudo apt-get update && sudo apt-get install graylog-server graylog-enterprise-plugins graylog-integrations-plugins graylog-enterprise-integrations-plugins</code>\n\n<h5 className='mt-3'>Graylog Sidecar telepítése</h5>\n\n<code>$ wget https://packages.graylog2.org/repo/packages/graylog-sidecar-repository_1-2_all.deb<br></br>\n$ sudo dpkg -i graylog-sidecar-repository_1-2_all.deb<br></br>\n$ sudo apt-get update && sudo apt-get install graylog-sidecar </code>\n\n            \n\n\n<h3 className='mt-3'>Konfiguráció </h3>\n\n<h5>Elasticsearch</h5>\n<code>sudo nano /etc/elasticsearch/elasticsearch.yml</code> \n<pre>cluster.name: graylog </pre>\n\n<code>sudo systemctl start elasticsearch.service <br></br>\nsudo systemctl enable elasticsearch.service</code>\n<p className='mt-3'>Ellenőrizzük, hogy fut -e!</p>\n<code>sudo systemctl status elasticsearch.service</code>\n \n\n\t\n<h5 className='mt-3'>MongoDB</h5>\n\n<code>sudo systemctl start mongod.service<br></br>\nsudo systemctl enable mongod.service</code>\n\n<p className='mt-3'>Ellenőrizzük, hogy fut -e!</p>\n<code>sudo systemctl status mongod</code>\n\n\n<h5 className='mt-3'>Filebeat </h5>\n<code> sudo nano /etc/filebeat/filebeat.yml  </code>\n <pre>output.elasticsearch:\n  hosts: [\"172.24.1.12:9200\"]</pre>\n\n<i>Itt egyből az Elasticsearchnek továbbítunk, nem használunk Logstash-t.</i>\n         \n\n     \n  <h5 className='mt-3'>Graylog</h5>\n\n<p>Szerkesszük a yaml fájlt és írjuk bele a titkosító jelszót és az admin jelszót. Generáljunk titkosító kódot. Jó tanács: Maradjon ez a jelszó 96 hosszú, mert rövidebbel nem  működik.</p>\n<code>pwgen -N 1 -s 96 </code>\n\n<code>NAgDMLbLBMElZioAF8sDNYn9eMe8FAV6m57kosghucJw2A3zTdPUCiNnOEK35gWkiA7go61ZdVJuogqrhez48yQr4Aj1tiXt</code>\n<p className='mt-3'>Admin user jelszavához is generáljunk jelszót.</p>\n<code>echo -n jelszo | shasum -a 256 </code>\n<p className='mt-3'>Kimenet:</p>\n<code>248b646537648c1fbdeb42b56771dbdb42129e8bab527ff551a1f49ce499464f</code>\n<p className='mt-3'>Adjunk a konfighoz  root email cimet és időzónát is:</p>\n<pre>root_email = horvathba@inf.uni-sopron.hu<br></br>\nroot_timezone = UTC</pre>\n<p>Be kell állítani a konfigban, hogy a Graylog melyik IP címen keresztül engedje a Webes felületet működni. Adjuk meg a szerverünk címét!</p>\n<pre>http_bind_address = 172.24.1.12:9000</pre>\n<p>Engedélyezzük, majd indítsuk el a graylogot</p>\n<code>systemctl enable graylog-server<br></br>\nsystemctl start graylog-server</code>\n<p className='mt-3'>Ellenőrzés:</p>\n<code>systemctl status graylog-server</code>\n \n\n\n        </Container>\n    )\n}\nexport default Dev","export default __webpack_public_path__ + \"static/media/mclog.6e274f99.png\";","import React from 'react'\nimport { Container, Badge, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport kep from \"../images/mclog.png\"\nconst Problem = () => {\nreturn (\n<Container className='mt-5'>\n    <h2>\n        <Badge bg=\"secondary\">2.</Badge> Probléma\n    </h2>\n    <hr>\n    </hr>\n    <p className='mt-2'>\n        A <b>cyan Security Group</b> azt szeretné, hogy a hálózat sokféle eszközének rendszernaplóit, valamint az egyedi\n        és nem egyedi szoftveres megoldásokat\n        monitorozni (<b>akár valós időben!</b>) tudjuk a magas rendelkezésre állás és gyors hibakezelések\n        érdekében. Ehhez nem elég hosszasan böngészni a naplókat lokálisan.\n        Erre nincsen idő egy vállalati környezetben.\n        Sokszor a naplósorokat nem is lehet értelmezni (pl. többsoros, bonyolult), ezeket érdemes lenne úgy\n        processzálni, hogy használhatóak legyenek.\n        Sajnos a naplók formátuma sem ugyanolyan, például egy <code>log4j</code> és egy <code>postgreSQL</code> soraiban a mezők nem ugyanúgy helyezkednek el, így\n        ezeket a változatosságokat sem tudjuk egyként kezelni.\n        Egyszerre nézegetni a fájlokat is igen megterhelő lenne, hiszen előfordulhat, hogy több számunkra érdekes forrás\n        is van, mint 4-5 darab, így kényelmesebb lenne egy GUI használata.\n        Fontos szempont még, hogy az előforduló igazán kritikus hibákat könnyedén tudjuk detektálni, és kimutatások\n        alapján megtenni a szükséges lépéseket.\n    </p>\n    <p>\n        Egy példa a <code>syslog</code> fájlból <i>\"hagyományos\"</i> módszerrel:</p>\n    <div>\n        <code>cyanadm@UNI-Server02:~$ sudo tail -f /var/log/syslog<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Listening on GnuPG cryptographic agent and passphrase\n            cache.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Listening on debconf communication socket.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Listening on REST API socket for snapd user session\n            agent.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Listening on D-Bus User Message Bus Socket.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Reached target Sockets.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Reached target Basic System.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Reached target Main User Target.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[1]: Started User Manager for UID 1000.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[61275]: Startup finished in 107ms.<br></br>\n            30 Jan 16 14:30:01 UNI-Server02 systemd[1]: Started Session 178 of user cyanadm.</code><br></br>\n\n    </div>\n    <p className='mt-4'>Esetleg böngészgethetjük az auth.log fájlt így:</p>\n    <img src={kep} width=\"100%\" alt=''></img>\n    <p className='mt-3'> Vagy ha hibák érdekelnek minket:</p>\n    <div id=\"codeblock\">\n        <code>\n            cyanadm@UNI-Server02:~$ journalctl -p 3 <br></br>\n            ...<br></br>\n            Dec 17 17:28:58 UNI-Server02 systemd[1]: Failed to start Filebeat sends log files to Logstash or directly to\n            Elasticsearch..<br></br>\n            Dec 23 12:24:51 UNI-Server02 rsyslogd[3603454]: error: extra characters in config line ignored: '”{'<%'}PRI%{'>%'}TIMESTAMP% %HOSTNAME% %syslogtag%%msg%”' [v8.2001.0]\n            <br></br> ... \n            </code>\n            \n           </div>\n          \n            <p className='mt-4'>\n                Érezhetjük tehát, hogy élesben nem túl hatékony parancsokat használni, keresgélni az elérési útvonalakat.\n                Azok az idők pedig elmúltak, hogy relációs adatbázisokon tároljuk a logokat.\n                Ezek alapvetően rendszermérnöki problémák, melyekre léteznek nyílt forráskódú megoldások, így nem kell nekünk megírnunk a sajátunkat, hanem\n                dolgozhatunk a jól bevált költséghatékony technológiákkal. \n            </p>\n            Ismert log kollektorok: <b>Graylog</b>, <b>Logstash</b>, <b>Fluentd</b>, <b>Flume</b>, <b>Octopussy</b>, <b>Rsyslog</b>, <b>Syslog-ng</b>.\n            A log kollektorok egyikét kell olyan rendszerbe ültetni, ahol van egy működő adatbázis és egy webes interfész.\n            \n            <p className='mt-2'>\n                A munka megkezdése előtt le kellett fektetni a követelményeket, melyek egyeznek a cég elvárásaival,\n                a tapasztalatunkkal és a tárgy teljesítéséhez szükséges feltételekkel. Ezek a következők:\n            </p>\n            <h4>\n                Funkcionális követelmények\n            </h4>\n                <ListGroup as='ol' numbered className='mb-3'>\n                    <ListGroupItem as='li'>\n                        <b>Linux-alap</b>\n                        <div>\n                            A cégcsoport szinte teljesen open-source szoftvereket használ, így nekünk is ezekkel kell dolgoznunk.\n                        </div>\n                    </ListGroupItem>\n                    \n                    <ListGroupItem as='li'>\n                        <b>Nyers logok processzálása</b>\n                        <div>\n                            Az adatok mezőkre bontva kerüljenek az adatbázisba.\n                        </div>\n                    </ListGroupItem>\n                    <ListGroupItem as='li'>\n                        <b>Lekérdezések készítése</b>\n                        <div>\n                            Szűrések, fontos sorok kinyerése.\n                        </div>\n                    </ListGroupItem>\n                    <ListGroupItem as='li'>\n                        <b>Statisztikák megjelenítése webes interfészen</b>\n                        <div>\n                            Elemzések készítése a telepített webes felület használatával.\n                        </div>\n                    </ListGroupItem>\n                    <ListGroupItem as='li'>\n                        <b>Cégspecifikus rendszerek naplóinak feldolgozása</b>\n            \n                    </ListGroupItem>\n                </ListGroup>\n           <h4>Nemfunkcionális követelmények</h4>\n           <ListGroup as=\"ol\" numbered className='mt-2'>\n           <ListGroupItem as='li'>\n                        <b>Előnyök, hátrányok detektálása</b>\n                        <div>\n                            Az összehasonlítás érdekében több szempontot figyelembe kell venni a munkánk során:\n                            <ul>\n                                <li>\n                                    Konfigurálhatóság\n                                </li>\n                                <li>\n                                    Erőforrásigény\n                                </li>\n                                <li>\n                                    Támogatás\n                                </li>\n                                <li>\n                                    Kezelhetőség\n                                </li>\n                                <li>\n                                    Funkciók\n                                </li>\n                                <li>\n                                    Stabilitás\n                                </li>\n                                <li>\n                                    Skálázhatóság\n                                </li>\n                            </ul>\n                        </div>\n                    </ListGroupItem>\n                    <ListGroupItem as='li'>\n                        <b>VPN és az adott virtuális környezet használata</b>\n                        <div>\n                            Hogy a produktum követhető legyen, a cég által biztosított virtuális gépeket használtuk, melyeket VPN kapcsolaton érhettünk el otthonról.\n                        </div>\n                    </ListGroupItem>\n                    <ListGroupItem as='li'>\n                        <b>Alapszintű biztonsági megoldás biztosítása</b>\n                        <div>\n                            Csak egy hitelesített felhasználó érje el a webes felületet.\n                        </div>\n                    </ListGroupItem>\n           </ListGroup>\n        </Container>\n    )\n}\nexport default Problem","import React from 'react';\nimport { Container, Badge, Table, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nconst Summary = () => {\n    return (\n        <Container className='mt-5'>\n            <h2>\n                <Badge bg=\"secondary\">7.</Badge> Összegzés\n            </h2>\n            <hr></hr>\n            <p className='mt-2'>\n            A három rendszer között voltak átfedések és különbségek. Nehéz meghatározni egyértelműen, hogy \"melyik a jobb.\" \n            Mindegyik rendszernek vannak erősebb és gyengébb tulajdonságai, mind remekül használható enterprise környezetben.\n            Az alábbi táblázatban szempontok alapján próbáltuk szemléltetni az erősebb és gyengébb oldalakat. </p>\n            <Table striped bordered hover style={{ marginTop:20}}>\n                    <thead>\n                        <tr>\n                        <th></th>\n                        <th>Elastic Stack</th>\n                        <th>EFK Stack</th>\n                        <th>Graylog</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td><b>Beépített funkciók</b></td>\n                            <td>Előny: Nem szűkölködik beépített funkciókban.<br></br>Hátrány: Alapértelmezetten nincsen felhasználókezelés. Pluginból érhető el.</td>\n                            <td>Az EFK Stack szintén tartalmazza a Kibana-t. Az Elastic jellemzők itt is érvényesek.</td>\n                            <td>Előny: Rengeteg funkció, felhasználókezelés alapértelmezetten. <br>\n                            </br>Nagyobb hátrány: nincs indexelés, pontosabban a Graylog ezt kezeli saját maga, ami azt jelenti, hogy egy helyen gyűlik minden adat.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Konfigurálhatóság</b></td>\n                            <td>Előny: Jól dokumentált. <br></br> Hátrány: Sok finomhangolás szükséges, ha nem elégszünk meg az alaptermékekkel. A Logstash használata nehézkes lehet.</td>\n                            <td>A Fluentd-vel flexibilis az eseménykezelés, szűrők írása, mint a Logstash által.</td>\n                            <td>Előny: Itt viszonylag kevés konfigurációval egy egészen használható platformot kapunk.<br></br> Hátrány: Ha szükségünk van a Logstash-re, itt is érvényes az, mint az Elastic-nál.</td>\n                        </tr>\n\n                       \n                        <tr>\n                            <td><b>Kezelhetőség</b></td>\n                            <td colSpan='2'>A Kibana felülete felhasználó- / rendszergazdabarát.</td>\n                            <td>A Graylog felülete hasonló, de több időt igényel a megtanulása.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Plugin-ok</b></td>\n                            <td>Az Elastic-hoz rengeteg plugin telepíthető, főleg a Logstash miatt.</td>\n                            <td>Kevesebb plugin, de azokat jól, egyszerűen lehet használni.</td>\n                            <td>Külön Graylog marketplace.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Teljesítmény</b></td>\n                            <td>A Java sok memóriát igényel, azonban ez a keresési sebességen nem érezhető.\n                                 (Meg kell jegyezni, hogy a tesztkörnyezetünk nem a valós életnek megfelelően volt méretezve.) </td>\n                            <td>Jobb teljesítmény, a Fluentd nem használ Java-t, a Logstash igen.</td>\n                            <td>Mint az Elastic.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Infrastrukturális jellemzők</b></td>\n                            <td>Elosztott használat, shard-ok által replikálódik az adat. Multi-node lehetőség az Elasticsearchben, a Logstash load-balance képes.</td>\n                            <td>Legtöbbször Kubernetes klaszteren használják. (Legoptimálisabb)</td>\n                            <td>Leginkább single-server felhasználás, de lehetőség van multi-node haszálatra.</td>\n                        </tr>\n                        \n                       \n                        <tr>\n                            <td><b>Dokumentáció</b></td>\n                            <td colSpan='2'>Jól dokumentált</td>\n                         \n                            <td>Nehezen érthető dokumentáció</td>\n                        </tr>\n                    </tbody>\n                    </Table>\n            <p>A téma célja egyfajta elmélyülés volt a linux-alapú rendszerek, a naplózás és a centralizált log szerverek világában.\n            Három elterjedt nyílt technológiával ismerkedtünk meg, és némi tapasztalatot szereztünk a rendszergazdai feladatok körében.\n            Azt állapítottuk meg, hogy a vizsgált rendszerek igaz, hogy az Elastic attribútumokat veszik alapul, mégis különbözőek:\n            Az Elastic Stack-nél a performancia a gyengepont, az EFK próbál ezen segíteni, a Graylog pedig kicsit olyan érzést kelt,\n            mintha nem is nyílt rendszer lenne, az olyan döntések miatt, mint hogy nem teszi lehetővé az indexek kezelését.\n            Az összehasonlító vizsgálatot valós scenarioknak megfelelően méretezett környezetekben érdemes folytatni, és úgy tűnik erre lesz lehetőség!\n           </p>\n           <p> A félév végén tartott konzultáción a cyan Security két lehetséges továbbhaladási irányt jelölt meg:</p>\n            <ListGroup as=\"ol\" numbered >\n                <ListGroupItem as=\"li\"><b>A rendszer kiépítésének optimalizálása</b>\n                <div>A rendszerek alkalmazása viszonylag könnyű,\n                     viszont a cég munkatársainak elmondása alapján egy elosztott rendszer kidolgozása az nehezebb feladat.\n                     Itt figyelembe kell venni a hálózati infrastruktúrát is. </div>\n                </ListGroupItem>\n                <ListGroupItem as=\"li\"><b>Big Data feldolgozás</b>\n                <div>A cég DNS lekérdezési hatalamas adatforgalmat generálnak (petabyte nagyságrend). Ezen adatok várnak feldolgozásra a megismert rendszerek egyikével.\n                    </div></ListGroupItem>\n            </ListGroup>\n        </Container>\n    )\n}\nexport default Summary","export default __webpack_public_path__ + \"static/media/elk.c39d8c4f.svg\";","export default __webpack_public_path__ + \"static/media/elkflow.f9f76aa4.png\";","export default __webpack_public_path__ + \"static/media/graylog_tools.4d1301a9.png\";","export default __webpack_public_path__ + \"static/media/filebeat.e3825273.png\";","import React from 'react';\nimport { Container, Badge, Table, ListGroup, ListGroupItem, Alert } from 'react-bootstrap';\nimport elk from '../images/elk.svg'\nimport elkflow from '../images/elkflow.png'\nimport graylog from '../images/graylog_tools.png'\nimport filebeat from '../images/filebeat.png'\nconst Tech = () => {\n    const fluentd_conf = \"<match logtype.error>type...</match>\"\n\n    return (\n        <Container className='mt-5'>\n            <h2>\n                <Badge bg=\"secondary\">3.</Badge> Technológia\n            </h2>\n            <hr></hr>\n            <p className='mt-2'>\n                <h3>\n                    Közösen használt technológiák\n                </h3>\n                <p>A közösen használt eszközök közé azok tartoznak, melyeket a cyan Security biztosított a számunkra, vagy valamilyen segédeszközök voltak.</p>\n                <ListGroup className='mb-3'>\n                    <ListGroupItem>\n                        <b>Ubuntu 20.04</b>\n                        <p>Debian-alapú Linux disztribúció, melynek a szerver változatát használtuk értelemszerűen.\n                        Több alternatíva is előkerült, de kezdésként, és az erős közösségi támogatottsága miatt erre esett a választás.</p>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <b>Proxmox VE</b>\n                        <p>Nyílt virtualizációs környezet, QEMU/KVM és LXC alapján, melyben a virtuális szervereink készültek.</p>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <b>VPN (FortiClient)</b>\n                        <p>Ahhoz, hogy el tudjuk érni a céges erőforrásokat, egy VPN tunnel-re volt szükségünk.\n                        Ezáltal elérhetővé váltak a belső IP címek, így a virtuális gépek is</p>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <b>PuTTY</b>\n                        <p>Egy elterjedt SSH kliens grafikus felülettel, megszokásból használtuk ennél a feladatnál is ezt.\n                        Igaz, nem volt kötelező, használhattuk volna a Windows-os parancssorunkat is, de 3 SSH kapcsolatnál érdemes menedzselni ezeket.</p>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <b>Midnight Commander</b>\n                        <p>A Total Commander terminálos megfelelője. Segítségével egyszerűbbé vált az elérési útak böngészése.</p>\n                    </ListGroupItem>\n                </ListGroup>\n                <h3>Mi miből áll?</h3>\n                <Alert variant='info'>\n                    <Alert.Heading as=\"h5\">\n                        Info\n                    </Alert.Heading>\n                    Az adatbegyűjtésre használt komponensek közül több alternatíva is kompatibilis lehet az adott rendszerrel, ez mindhárom esetben igaz\n                    (<i>például az EFK Stack esetében az rsyslogot csak kísérleti nyúlként alkalmaztuk, egyébként a beépített tail plugint szokták használni</i>).\n                    \n                </Alert>\n                 <Table striped bordered hover style={{ marginTop:20}}>\n                    <thead>\n                        <tr>\n                        <th></th>\n                        <th>Elastic Stack</th>\n                        <th>EFK Stack</th>\n                        <th>Graylog</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td><b>Adatgyűjtő rész</b></td>\n                            <td>Beats<br>\n                            </br><i>Alternatíva: Elastic Agents, számtalan megoldás</i>\n                            </td>\n                            <td>rsyslog<br></br>\n                            <i>Alternatíva: tail plugin, syslog plugin, Beats</i>\n                            </td>\n                            <td>Beats, TCP, UDP protokoll<br>\n                            </br>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Processzálás, szűrés</b></td>\n                            <td>Logstash</td>\n                            <td>Fluentd</td>\n                            <td>Graylog kezeli, Logstash opcionális</td>\n                        </tr>\n\n                       \n                        <tr>\n                            <td><b>Adatbázis</b></td>\n                            <td colspan=\"2\">Elasticsearch</td>\n                            <td>Elasticsearch, MongoDB a konfigurációs adatok tárolására</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Webes felület</b></td>\n                            <td colspan=\"2\">Kibana</td>\n                            <td>Graylog sajátja</td>\n                        </tr>\n\n                    </tbody>\n                    </Table>\n                    \n            \n                <h3>\n                    <a href='https://www.elastic.co/'>Elastic Stack (ELK) </a>\n                </h3>\n                <hr></hr>\n                <p>\n                    Az <b>ELK</b> egy betűsző, 3 nyílt-forráskódú projektet takar: <b>Elasticsearch</b>, <b>Logstash</b> és <b>Kibana. </b>\n                    Mondhatni ez a piacvezető rendszer naplófájlok gyűjtésére és elemezésére.\n                </p>\n                <img src={elkflow} style={{float:'right'}} width=\"60%\"></img>\n                <img src={elk} width=\"40%\" className='mb-3'></img>\n                \n                <h4>Elasticsearch</h4>\n                <p>Az Elasticsearch egy ingyenes, nyílt analítikai motor mindenféle adattípusra,\n                    akár legyen az strukturált vagy nem-strukturált. Az <b>Apache Lucene</b> alapján készült (Java alapú), és 2010-ben jelent meg.\n                    Ismert az egyszerű REST API-járól, skálázhatóságáról és gyorsaságáról, ez a komponens az Elastic Stack szíve és lelke, amely Stack\n                    egy olyan eszközgyűjtemény, melyben szerepet kap az adatok beérkeztetése, tárolása, analízálása és vizualizálása.\n                    Még gyakran hivatkoznak rá ELK Stack-ként, azonban már a <b>Beats</b> projektet is hozzácsatolták az eddigiekhez, a név Elastic lett és már erőforrásbarát \"adatszállítókat\" kaptunk.\n                </p>\n                <h6>Mire használatos?</h6>\n                Az Elasticsearch tulajdonságait kihasználva számtalan esetben használható:\n                <ul>\n                    <li>\n                        Logging és log elemzés\n                    </li>\n                    <li>\n                        Infrastruktúra metrikák és konténerizációs megoldások monitorozása\n                    </li>\n                    <li>\n                        Performancia monitoring\n                    </li>\n                    <li>\n                        Biztonsági analítika\n                    </li>\n                    <li>\n                        Üzleti elemzések\n                    </li>\n                </ul>\n                <h6>Hogyan működik?</h6>\n                <p>Az Elasticsearch különböző helyekről képes fogadni nyers adatokat: naplók, metrikák, webes alkalmazások...\n                Az adat \"lenyelés\" (data ingestion) olyan folyamat, mely által a nyers adat parszolva, normalizálva lesz mielőtt még indexelve lenne az adatbázisban.\n                Miután az adatok index minták (index pattern) alapján tárolásra kerülnek komplex, aggregált lekérdezéseket is tudunk használni.\n                Ehhez az adatbázishoz akár többféleképpen is hozzáférhetünk, ha fejlesztésről lenne szó (köszhetően az egyszerű REST API-nak):\n                <ul>\n                    <li>SQL</li>\n                    <li>Python</li>\n                    <li>Java</li>\n                    <li>JavaScript (Node.js)</li>\n                    <li>Go</li>\n                    <li>.NET (C#)</li>\n                    <li>PHP</li>\n                    <li>Perl</li>\n                    <li>Ruby</li>\n                </ul>\n                </p>\n                <h6>Miért használjuk?</h6>\n                <p><b>Gyorsaság</b>: Közel real-time platform, a dokumentumok indexeléstől számítva igen gyorsan vállik kereshetővé (1 másodperc tipikusan).\n                    Jól használható időérzékény scenarioknál, mint infrastruktúra monitorozás vagy biztonsági analízis.\n                </p>\n                <p><b>Az Elasticsearch elosztott</b>: A dokumentumok elosztott tárolókban (shards) laknak. A shard-ok redundáns tárolást tesznek lehetővé,\n                ami jól jön hardveres hibánál. Az Elasticsearch akár 100 (akár 1000) szerverre skálázható, és akár képessé téve petabyte-nyi adatok kezelését.\n                </p>\n                <p><b>Sok feature</b>: Index lifecycle management például. A régebbi indexek archiválhatóak, naponta készíthető új index.\n                </p>\n                <p><b>A Data ingest és reporting könnyű </b>: Grafikus eszközök sokasága jellemzi a rendszert.\n                </p>\n                <Alert variant='info'>\n                    <Alert.Heading as= \"h6\">Elastic indexek</Alert.Heading>\n                    Az Elastic indexek olyan dokumentumok gyűjteménye, amelyek egymással kapcsolatban vannak. Az Elasticsearch JSON dokumentumokban tárol.\n                </Alert>\n                <h4>Logstash</h4>\n                <p> A Logstash szintén az ELK Stack magját képzi, ám használata nem kötelező. Az a funkciója, hogy preprocesszálja az adatokat, mielőtt még az Elasticsearch adatbázisba kerülnének.\n                Ez a köztes rész, mint egy pipeline teszi lehetővé a többféle forrásból szimultán áramló adatok transzformálva legyenek.\n                Igen gazdag pluginkészlettel rendelkezik, különféle szűrők írhatóak benne, elágazásokkal, inputokkal és outputokkal.</p>\n                <h6>Példa pipeline, Apache access logokra</h6>\n                <div className='mb-3'>\n                <pre>\n                    <code>\n                    {`input {\n    beats {\n        port => \"5044\"\n    }\n}\nfilter {\n    if [fileset][name] == \"access\" {\n        grok {\n            match => { \"message\" => \"%{COMBINEDAPACHELOG}\"}\n        }\n    }\n}\noutput {\n    elasticsearch {\n        hosts => [ \"localhost:9200\" ]\n    }\n}  `}\n                    </code>\n                </pre>\n              \n        \n                </div>\n                <p>Ennél a példánál az <code>input</code> plugin Beats adatokat fog fogadni az 5044-es porton,\n                    apache-access logokra szűrünk. A <code>grok</code> egy mintára illeszti a sorokat, bizonyos mezőkhöz rendeli a sor részeit, majd ezeken további módosítások hajthatóak végre.\n                    Az <code>output</code> plugin az átdolgozott adatot az elasticsearchnek fogja küldeni.\n                </p>\n                <h4 className='mt-3'>Kibana</h4>\n                <p>A Kibana pedig az adatok vizualizálásáért és menedzseléséért felel. Valós-idejű hisztogramok, vonaldiagrammok, pie chart-ok és térképek készíthetőek többek közt benne.\n                Fontos eszközök, amik említésre méltóak és elérhetőek a Kibana felületen: Grok Debugger (A Logstash szűrők írása miatt érdemes használni), Console (REST API használata), Alerts (behatolások detektálása) stb.\n                Lényegében ez a rendszer frontend-je.</p>\n                <h4>Beats (Filebeat)</h4>\n               \n                <p> Erőforrásbarát adatszállítók, figyelik és gyűjtik a logokat, majd továbbítják a kívánt célhoz. \n                Képes arra, hogy hogy leállás után megjegyezze a helyet, hol tartott, majd folytatja az olvasást és küldést.\n                Beépített modulokat használ az adatok gyűjtésére és parszolására (csak ismertebb naplók), ez lényegesen leegyszerűsíti a konfigurálást.\n                Több Beats alternatíva létezik: Filebeat (legelterjedtebb), Metricbeat, Heartbeat, Auditbeat, Functionbeat és egyebek.\n                Ezt a részt lehetne nevezni a \"kliensoldalnak\".\n                Mi a Filebeat forkot használtuk a félévben, a többit csak kipróbáltuk. Beats működése:</p>\n                <img src={filebeat} width=\"70%\"></img>\n                <h3>\n                    EFK Stack\n                </h3>\n                <hr></hr>\n                <p>\n                    <h4>Fluentd</h4>\n                    <h6>E(F)K?</h6>\n                    Az EFK Stack, az ELK-hoz hasonló központosított loggyűjtő és megjelenítő megoldás. A három open-source program (elasticsearch, logstash, kibana) közül ugyanis\n                    itt kimarad a logstash, helyét a <b>fluentd</b> váltja fel.\n                    <h6 className='mt-3'>Mi az a fluentd?</h6>\n                    \n                    A fluentd is, akárcsak a logstash egy nyílt forráskódú adatgyűjtő szoftver. Megkönnyíti az összegyüjtött adatok értelmezését és elemzését. Leggyakrabban központi loggyűjtő megoldásokhoz használják, ahogy mi is tettük.\n                    A fluentd és a logstash közötti különbségeket alább egy táblázatban gyűjtöttük ki. A legfontosabb különbség a teljesítmény. A fluentd lényegesebben kevesebb plugint használ az alap csomagban, mint a logstash. Inkább a teljesítmény növelésére lett kifejlesztve.\n                    Ugyanakkor a konfigurációja pont emiatt kicsit összetettebb lehet.\n                    A fluentd feladata leválasztani a különböző rendszerek naplófájlait és így egy egységes naplózási réteget biztosít. A rétegnek köszönhetően a fejlesztők, adatelemzők nyugodtan generálatnak\n                    sokféle logtípust. A szerveren a háttérben futhat, közben folyamatosan gyűjti, elemzi, átalakítja az adatokat. Ezen tulajdonságainak köszönhetően a rendszer segíti a naplóadatok gyors feldolgozását és csökkenti a szervezet félretájékoztatásának kockázatát.\n                    A technológia elterjedése az úgynevezett konténeres környezeteknek is köszönhető, hiszen ott is egyszerű konfigurálni.\n                    <Table striped bordered hover style={{ marginTop:20}}>\n                    <thead>\n                        <tr>\n                        <th></th>\n                        <th>Logstash</th>\n                        <th>Fluentd</th>\n                        <th>Megjegyzés</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td><b>Fejlesztő</b></td>\n                            <td>A Logstash a híres ELK stack része.</td>\n                            <td>A Fluentd-t a Treasure Data hozta létre.</td>\n                            <td>Ennek ellenére a Fluentd is kiváló támogatást kap az Elastichoz. Támogatása miatt a konténeres technológiákhoz jobb választás, mint a Logstash.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Programnyelv</b></td>\n                            <td>JRuby, szükséges Java runtime.</td>\n                            <td>CRuby, nincs szükség a Javara.</td>\n                            <td>A Fluentd előnye, hogy nem használja a Javat.</td>\n                        </tr>\n\n                       \n                        <tr>\n                            <td><b>Eseménykezelés</b></td>\n                            <td>If, else kondíciók pl. <code>if[loglevel] == 'ERROR'</code></td>\n                            <td>Tageket használ az eseménykezelésre. <code>{fluentd_conf}</code></td>\n                            <td>A Fluentd előnye, hogy tageket használva egyszerűbb a rengeteg típusú log feldolgozására. A Logstashnél kicsit körülményesebb.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Plugin támogatás</b></td>\n                            <td>Megközelítőleg 200db.</td>\n                            <td>Megközelítőleg 500db.</td>\n                            <td>A Logstash az összes pluginját központosítva tárolja a github repoban. A Fluentd nem rendelkezik repoval a pluginokhoz.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Teljesítmény</b></td>\n                            <td>Több memóriát használ.</td>\n                            <td>Kevesebb memóriát használ.</td>\n                            <td>A Fluentd így jobb teljesítményt biztosít, de igazából teljesítményben mindkét megoldás kézenfekvő.</td>\n                        </tr>\n\n                        <tr>\n                            <td><b>Szállítás</b></td>\n                            <td>A Logstash egy memórián belüli sorra korlátozódik, amely 20 eseményt tartalmaz.</td>\n                            <td>Fluentd egy alaposan konfigurálható Buffer-system-el rendelkezik.</td>\n                            <td>Egy 2015-ös Openstack felmérés szerint mindkét megoldás hasonló és kézenfekvő.</td>\n                        </tr>\n                        \n                        <tr>\n                            <td><b>Támogatás</b></td>\n                            <td>Igen <a href=\"https://www.elastic.co/guide/en/logstash/current/index.html\" target=\"_blank\">Link</a>.</td>\n                            <td>Igen <a href=\"https://docs.fluentd.org/\" target=\"_blank\">Link</a>.</td>\n                            <td>A Logstash az Elastic részeként jobb támogatással rendelkezik.</td>\n                        </tr>\n\n                    </tbody>\n                    </Table>\n                </p>\n                \n                    <h3>Graylog</h3>\n                     <p>  \n                        A Graylog egy opensoucre platform, amely leegyszerűsítí a strukturált és a strukturálatlan adatrekordok kezelését.\n\n\n\n                        Egy központosított naplókezelési megoldás, amely nyitott szabványok szerint készült a naplófájlok terabájtjainak rögzítésére, tárolására és valós idejű elemzésére, lehetővé téve a real-time  keresést. A Graylog lehetővé teszi a méretezhető naplókezelési megoldások kiválasztását, hogy többet tudjon kezelni biztonsági és teljesítményadataival. Az adott vállalat méretétől, technológiáitól vagy konfigurációitól függetlenül a Graylog megfelelő lehetőséget kínál.\n<br></br>\n                       <br></br> <h5> Négy komponensből áll:</h5>  </p> \n                        </p>\n                       <ul>\n                        <li>Elasticsearch 7.15.2</li>\n                        <li>MongoDB 4.0.27</li>\n                        <li>Filebeat 7.15.2</li>\n                       <li>Graylog 4.2.1</li> </ul> \n\n\n         <h5>Autentikáció</h5>\n\n <p>A Graylog hitelesítési hozzáférése az LDAP. Az LDAP segítségével szinkronizálhatjuk az egyes csoportokat és a csoportokon belüli felhasználókat. Számos felhasználónevet létre lehet hozni a hálózaton, és szinkronizálni a Graylogon belüli csapatokkal. Így az Active Directory-csoportok szinkronizálódnak a Graylogon belüli szinkronizált csoportokkal, és továbbítják a felhasználókat. </p>\n\n<h5>Graylog Sidecars</h5>\n\nA Graylog Sidecar egy konfigurációkezelő rendszer különböző log gyűjtőkhöz, más néven Backendekhez. A Graylog főcsomópont központilag elhelyezett hubként működik, amely tartalmazza a naplógyűjtők konfigurációit. A naplógyűjtő konfigurációk központilag kezelhetők a Graylog webes felületén keresztül. <br></br>\n\n<h5>Log Inputs</h5>\n\nA Graylog beállítások adatok nélkül semmit sem érnek. A Graylog inputok felelősek a naplóüzenetek elfogadásáért. Néhány alapértelmezett üzenettípus alapértelmezés szerint elérhető a Graylogban. \n\n\n<h5><br></br>Log források: </h5>\n<ul>\n<li> <b> Syslog  </b> </li>\n<li> Journald </li>\n<li> Windows eventlog</li>\n<li> CEF</li>\n<li> Raw/Plaintext</li>\n<li> GELF</li>\n<li> From files</li>\n<li> JSON path from HTTP API</li>\n<li> Application Data</li>\n</ul> \n\n\nEGYEDI BEMENETEK:<br></br>\n<ul> \n<li> <b> Beats </b></li><b> </b>\n<li>AWS Kinesis/CloudWatch bemenet</li>\n<li>IPFIX bemenet</li>\n<li> Okta napló eseménybevitel </li>\n<li>Palo Alto Networks bemenet</li>\n\n</ul>\nA Beats nyílt forráskódú adatszállítók, amelyeket \"ügynökként\" telepít a szervereire, hogy  adatokat küldjön az Elasticsearch -nek . Az Elastic ütemeket biztosít a rögzítéshez.\n<br></br>\n\n\n<br></br><b> <h5>Filebeat  </h5></b> <br></br>\n\n\nA Filebeat egy szállító a naplóadatok továbbításához és központosításához. A kiszolgálókra \"ügynökként\" telepített Filebeat figyeli a megadott naplófájlokat vagy helyeket, összegyűjti a naplóeseményeket, és továbbítja azokat az Elasticsearch vagy a Logstash felé indexelés céljából.\n\n\n                      \n                       \n\n                        <img src={graylog} width=\"50%\" height=\"50%\" className='mb-3'></img>\n\n\n<p><h5>MongoDB</h5>\nA Graylog a MongoDB-t használja a konfigurációs adatok tárolására, nem pedig a naplóadatokat.\n A rendszer csak metaadatokat tárol, például felhasználói információkat vagy adatfolyam-konfigurációkat.\n  A naplóüzenetek egyike sem kerül tárolásra a MongoDB-ben. Ez az oka annak, hogy a MongoDB-nek nincs nagy rendszerhatása,\n   és nem kell túl sokat aggódni a méretezés miatt.\n</p>\n\n\n\n\n\n\n        </Container>\n    )\n}\nexport default Tech","import React from 'react';\nimport { Container, Badge } from 'react-bootstrap';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport {  FaRecordVinyl } from 'react-icons/fa';\nconst Timeline = () => {\n    return (\n        <Container className='mt-5'>\n            <h2>\n                <Badge bg=\"secondary\">6.</Badge> Munkafolyamatok\n            </h2>\n            <hr></hr>\n            <VerticalTimeline>\n            <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. szeptember vége\"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Követelmények megbeszélése</h3>\n            <p>\n            A cyan Security által meghirdetett téma átbeszélése, ismerkedés a belső és külső konzulenssel.\n            A haladásról hetente, másfél hetente jelentünk a belső konzulensnek.\n            A témakidolgozás egy összehasonlítás három, piacon elterjedt technológiáról:\n            <ul>\n                <li>\n                Rácz Máté - Elastic Stack\n                </li>\n                <li>\n                Mandl Ábel - EFK Stack\n                </li>\n                <li>\n                Horváth Bálint - Graylog\n                </li>\n            </ul>\n            </p>\n        \n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. október eleje\"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Linux alapismeretek</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\">Parancsok, könyvtárak megismerése</h4>\n            <p>\n            A feladat elvégzéséhez alapvető Linux ismeretekre van szükség. Ilyen volt a legáltalánosabb linux parancsok megismerése is, mint például\n            a <code>cd, ls, cat, cp, rm, mkdir, mv, rmdir</code>.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. október eleje\"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Linux rendszerlogok</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\">A var/log mappa</h4>\n            <p>\n            A linux általános megismerése után fókuszálhattunk a naplófájlokra, hiszen a feladatban is ezek játszák a főszerepet. A <code>/var/log</code> mappa tartalmát\n            vizsgáltuk meg, hogy a mi esetünkben az <b>Ubuntu</b>, hogyan tárolja el az alap rendszer által generált logokat.\n            Itt megismertük a következő rendszer-log típusokat: <code>syslog, authlog, daemonlog, kernellog, debuglog</code>.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. október 12.\"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Logok gyűjtése, módszerek elkülönítése</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\">Beats, rsyslog</h4>\n            <p>\n            A logok \"aratásához\" több módszer használatos, (<code>Beats, rsyslog...</code>) ezek működésének a tanulmányozása volt a cél.\n            A kulcskérdések: Hogyan, milyen fájlokat vizsgálhatnak a szoftverek? Mikor? Hogyan továbbítják az adatot? Milyen beépített funkciókkal rendelkeznek?\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. október 29. \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">VPN, virtuális környezet hozzáférés</h3>\n            <p>\n            A cyan Security által biztosított virtuális környezethez tartozó jelszavakat, VPN-hozzáféréseket megkaptuk. A kapcsolat tesztelése után megkezdődhetett az érdemi munka.\n            </p>\n        </VerticalTimelineElement>\n    \n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. november eleje \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Installáció</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\"><code>ELK Stack, EFK Stack, Graylog</code> telepítése virtuális környezetben</h4>\n            <p>\n            A Stack-eket alkotó komponensek telepítése és tesztelése dokumentáció alapján (GUI elérés, nyers logok gyűjtése).\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. november közepe \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Biztonsági megoldások, szolgáltatások naplói</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\">Reverse proxy megvalósítása, <code>NGINX, Apache</code> logok</h4>\n            <p>\n            Éles környezetben szükséges kihasználni a biztonsági megoldásokat (<code>SSL, Open Distro, xpack-security...</code>), ám tesztelési célból csak egy Reverse Proxy-t telepítettünk a webes felület elé.\n            A logok monitorozását kiterjesztettük vállalati környezetben is előforduló szolgáltatásokra.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. november vége \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Szűrés, processzálás</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\">Logstash grok pattern, fluentd megoldások </h4>\n            <p>\n            A jövőben fontos lehet az, hogy ismerjük miként tudunk egyéni naplósorokra egy mintát írni, amely alapján hasznos információkat tudunk kiszűrni.\n            A meglévő syslog, nginx, apache logokra írtunk mintát, kinyerve a logok szintjét is, amely egy fontos szűrési szempont.\n            Ebben a stádiumban olyan kérdéseket is feltettünk magunknak, hogy érdemes-e külön indexekbe szedni az adatainkat.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2021. december \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Webes felületek lehetőségei, vizualizációk</h3>\n            <h4 className=\"vertical-timeline-element-subtitle\">Kibana, Graylog tanulmányozása</h4>\n            <p>\n           Ennél a pontnál el kellett kezdenünk összehasonlítani a három megoldást, így a webes felületek által nyújtott lehetőségeket is.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2022. január \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">Dokumentáció, hibák javítása</h3>\n            <p>\n           Megkezdődött a dokumentáció összeállítása, még tovább ismerkedtünk a rendszerekkel.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"2022. január 18.\"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">I-NEW konzultáció</h3>\n            <p>\n           Az eddigi munka áttekintése, bemutatás, jövőre vonatkozó kérdések tárgyalása.\n            </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n            className=\"vertical-timeline-element--work\"\n            contentStyle={{ background: 'rgb(0, 0, 0)', color: '#fff' }}\n            contentArrowStyle={{ borderRight: '7px solid  rgb(108, 117, 125)' }}\n            date=\"Jövő \"\n            iconStyle={{ background: 'rgb(108, 117, 125)', color: '#fff' }}\n            icon={<FaRecordVinyl color=\"white\"/>}\n        >\n            <h3 className=\"vertical-timeline-element-title\">A jövő</h3>\n            <p>\n            Ez a téma rengeteg lehetőséget tartogat a jövőben:\n            <ul>\n              \n                <li>\n                    Filestream alapú feldolgozás\n                </li>\n                <li>\n                    Bonyolultabb szűrések\n                </li>\n                <li>\n                    Automatizált alerting rendszer\n                </li>\n                <li>\n                    Tesztek\n                </li>\n                <li>\n                    Klaszterben használat (shard-ok kihasználása)\n                </li>\n                <li>\n                    Mesterséges intelligencia bevonása\n                </li>\n                <li>\n                    Architektúra optimalizáció\n                </li>\n                <li>\n                    Cross-query írása\n                </li>\n                \n            </ul>\n            </p>\n        </VerticalTimelineElement>\n        </VerticalTimeline>\n        </Container>\n    )\n}\nexport default Timeline","export default __webpack_public_path__ + \"static/media/prompt.a291998e.png\";","export default __webpack_public_path__ + \"static/media/kibana-start.244549a9.png\";","export default __webpack_public_path__ + \"static/media/menu.03b86887.png\";","export default __webpack_public_path__ + \"static/media/search.4e322349.png\";","export default __webpack_public_path__ + \"static/media/indices.abc266ca.png\";","export default __webpack_public_path__ + \"static/media/manage-ind.44a632db.png\";","export default __webpack_public_path__ + \"static/media/createpattern.64e4d99a.png\";","export default __webpack_public_path__ + \"static/media/indexpatterns.1fb4415f.png\";","export default __webpack_public_path__ + \"static/media/discover.34352618.png\";","export default __webpack_public_path__ + \"static/media/query.11d65c4f.png\";","export default __webpack_public_path__ + \"static/media/resp.2eda8899.png\";","export default __webpack_public_path__ + \"static/media/message.d23e48d9.png\";","export default __webpack_public_path__ + \"static/media/kql.0fcb88e2.png\";","export default __webpack_public_path__ + \"static/media/kibana-dash.ede1dbee.png\";","export default __webpack_public_path__ + \"static/media/nginx-dash.23b7ef90.png\";","export default __webpack_public_path__ + \"static/media/dashboard1.6def9c66.png\";","export default __webpack_public_path__ + \"static/media/dashboard2.2f86ea83.png\";","export default __webpack_public_path__ + \"static/media/pipelines.93779442.png\";","export default __webpack_public_path__ + \"static/media/grokdebug.68dc3a25.png\";","export default __webpack_public_path__ + \"static/media/bej.5a86702d.JPG\";","export default __webpack_public_path__ + \"static/media/alert_not1.69487e79.JPG\";","export default __webpack_public_path__ + \"static/media/alert_not2.276ce0c4.JPG\";","export default __webpack_public_path__ + \"static/media/beats_inupt2.94971919.JPG\";","export default __webpack_public_path__ + \"static/media/Beats_input.f3538ec6.JPG\";","export default __webpack_public_path__ + \"static/media/dash_1.d9af128e.JPG\";","export default __webpack_public_path__ + \"static/media/dash_2.9f4aa606.JPG\";","export default __webpack_public_path__ + \"static/media/dash_3.12593282.JPG\";","export default __webpack_public_path__ + \"static/media/inputs_1.2ce020f6.JPG\";","export default __webpack_public_path__ + \"static/media/index1.17f8089d.JPG\";","export default __webpack_public_path__ + \"static/media/kezdolap.cff0d4ae.JPG\";","export default __webpack_public_path__ + \"static/media/stream.74960ef6.JPG\";","export default __webpack_public_path__ + \"static/media/user_create.ece8e113.JPG\";","export default __webpack_public_path__ + \"static/media/user_overw.0813ff57.JPG\";","import React from 'react';\nimport { Container, Badge, Alert } from 'react-bootstrap';\nimport prompt from '../images/prompt.png'\nimport kibanastart from '../images/kibana-start.png'\nimport menu from '../images/menu.png'\nimport search from '../images/search.png'\nimport indices from '../images/indices.png'\nimport manageind from '../images/manage-ind.png'\nimport createpattern from '../images/createpattern.png'\nimport indexpatterns from '../images/indexpatterns.png'\nimport discover from '../images/discover.png'\nimport query from '../images/query.png'\nimport resp from '../images/resp.png'\nimport message from '../images/message.png'\nimport kql from '../images/kql.png'\nimport kibanadash from '../images/kibana-dash.png'\nimport nginxdash from '../images/nginx-dash.png'\nimport dashboard1 from '../images/dashboard1.png'\nimport dashboard2 from '../images/dashboard2.png'\nimport pipelines from '../images/pipelines.png'\nimport grokdebug from '../images/grokdebug.png'\n\nimport bej from '../images/bej.JPG'\n\nimport alert_not1 from '../images/alert_not1.JPG'\nimport alert_not2 from '../images/alert_not2.JPG'\nimport beats_input from '../images/Beats_input.JPG'\nimport beats_inupt2 from '../images/beats_inupt2.JPG'\nimport dash_1 from '../images/dash_1.JPG'\nimport dash_2 from '../images/dash_2.JPG'\nimport dash_3 from '../images/dash_3.JPG'\nimport index1 from '../images/index1.JPG'\nimport inputs_1 from '../images/inputs_1.JPG'\nimport kezdolap from '../images/kezdolap.JPG'\nimport stream from '../images/stream.JPG'\nimport user_create from '../images/user_create.JPG'\nimport user_overw from '../images/user_overw.JPG'\nimport user_testuser from '../images/user_testuser.JPG'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Usermanual = () => {\n    return (\n        <Container className='mt-5'>\n        <h2>\n            <Badge bg=\"secondary\">4.</Badge> Felhasználói bemutatás\n        </h2>\n        <hr></hr>\n        <Alert variant='info'>\n            <Alert.Heading as='h5'>Info</Alert.Heading>\n        Ebben a részben a tanulmányozott webes felületek kerülnek tárgyalásra,\n        mivel itt a felhasználók célcsoporja rendszermérnökök, DevOps mérnökök, így ilyen minőségben taglaljuk őket.\n        \n        </Alert>\n        <h3>Kibana</h3>\n        <p>A Kibana-t weben érhetjük el, alapértelmezetten 5601-es porton, ám egy nginx proxy is konfigurálva lett amely a 80-as portra\n            érkező kéréseket fordítja az 5601-es port felé. \n        </p>\n        <img src={prompt} width=\"40%\"></img>\n        <p>A bejelentkezéshez a Kibana-hoz rendelt felhasználó adatait adjuk meg.</p>\n        <p>Belépés és az oldal betöltése után a következő fogad minket:</p>\n        <img src={kibanastart} width=\"80%\"></img>\n        <p>A menü a bal felső sarok lenyitásával elérhető, vagy a keresett funkciót a megfelelő kulcsszavakkal is megtalálhatjuk.</p>\n        <img src={menu} width=\"20%\"></img>\n        <img src={search} width=\"60%\" style={{float:\"right\"}}></img>\n        <p>Tekintsük meg a meglévő indexeinket, melyekben a logok találhatóak <b>(Data / Index Management)</b>:</p>\n        <img src={indices} width=\"80%\"></img>\n        <p>Láthatjuk, hogy a daemon-verzió-dátum nevet használja indexként. Kijelölve tudjuk őket kezelni:</p>\n        <img src={manageind} width=\"35%\"></img>\n        <p>Ahhoz, hogy az adatainkon lekérdezéseket és egyéb műveleteket\n            tudjunk végezni Index Pattern-okat kell létrehozni <b>(Kibana / Index Patterns)</b>:</p>\n        <img src={createpattern} width=\"80%\"></img>\n        <p>Vegyük észre, hogy a meglévő indexeinkre illeszthető mondjuk a filebeat-* név. (Az összes 'filebeat' kezdetű index ebben lesz).\n            Névadás után kattintsunk a '<i>Create index pattern</i>' gombra.\n        </p>\n        <p>Ugyanezen a fülön láthatjuk a létrehozott Index Pattern-okat.</p>\n        <img src={indexpatterns} width=\"80%\"></img>\n        <p>Innentől fogva kezelhetjük az adatainkat a webes eszközök segítségével.</p>\n        <p><b>Analytics / Discover fül</b>:</p>\n        <img src={discover} width=\"100%\"></img>\n        <p>A grafikonon láthatjuk hogy egyes időszakokban mennyi volt a beérkezett adat, alatta pedig a kinyert logokat soronként.\n            Bal oldalt kiválaszthatő melyik Index Pattern adatait szeretnénk vizsgálni, alatta egy 'Search field names' kereső található,\n            amellyel bizonyos mezőkre tudunk szűrni. Az 'Available fields tartalmazza' mindazokat a mezőket, amelyekre lehetne szűrni a kinyert adatok alapján.\n            A keresési időintervallum szűkíthető és bővíthető, villámsebességgel tudunk visszamenni akár 1 évvel ezelőtti naplókhoz is.\n            A bal felső sarokban található még egy szűrő amivel okosabb, bonyolultabb feltételekkel rendelkező lekérdezéseket tudunk gyártani, melyeket el is tudunk menteni.\n            Egy ilyenre példa:\n        </p>\n        <img src={kql}></img>\n        <img src={query}></img>\n        <p>Tehát olyan syslog sorokat szeretnénk nézni, ahol a severity level \"error\" vagy \"warning\" volt.\n             Lényegében az égetően sürgős üzenetekre voltunk kíváncsiak.\n             A kapott sorokból 2 rekord:</p>\n             <img src={resp} width=\"100%\"></img>\n             <p>Az rekordokat \"kinyitva\" ezeket olvashatjuk:</p>\n        <img src={message} width=\"100%\"></img>\n        <Alert variant='warning'><Alert.Heading as='h6'>Figyelem</Alert.Heading>\n            Itt több mező is volt, de amiket látunk a fontosabbak, amelyeket\n            egyébként alapkonfigurációval nem kapunk kézhez. Ezekhez logstash grok filtert kellett alkalmazni.\n            A mezők száma alkalmazott komponensektől is függ, az EFK Stack esetében lényegesen kevesebb mezőt kaptunk.</Alert>\n            <p>A fenti megállapítás miatt, most a fejlesztői eszközök közül Grok Debugger használatát mutatnám be, illetve tippeket adnék, hogy hogyan\n                érdemes elkezdeni a Grok Pattern-ok írását. (<b>Dev Tools / Grok Debugger</b>):\n            </p>\n            <img src={grokdebug} width=\"100%\"></img>\n            <p>A 'Sample Data' sorokba illeszünk be mondjuk syslog sorokat. Próbálkozzunk a mezők felismerésével,\n                 nyilván olyan módon, hogy az elvárásainknak megfeleljen a kimenet. A grok szintaktikát tanulmányozhatjuk  \n                 <a href='https://github.com/hpcugent/logstash-patterns/blob/master/files/grok-patterns' className='link-style'  target=\"_blank\"> ebből a github repository-ból.\n                  </a> A megírt grok patternt illesszük be, majd nyomjunk a 'Simulate' gombra. A 'Structured Data' alatt jelenik meg JSON formátumban,\n                    hogy mit sikerült kiszűrnünk az első sorból. </p>\n            <p>Ami még érdekes lehet a számunkra, az a dashboard-ok készítése. A Filebeat biztosít beépített dashboard-okat is,\n                de magunk is létrehozhatunk újakat. <b>(Analytics / Dashboard)</b>:\n            </p>\n            <img src={kibanadash} width=\"100%\"></img>\n            <p>Figyeljük meg hogy a Filebeat mennyi előre elkészített mintával jön. Nginx példa:</p>\n            <img src={nginxdash} width=\"100%\"></img>\n            <i>Ez csak egy részlete ennek a kimutatásnak. Azért mutathat inkonzisztens adatokat, mert a Logstash által specifikusabb szűrések is végbementek,\n                 ezek a kimutatások csak az alap Filebeat konfigurációval használhatóak.</i>\n            \n            <p>Saját kimutatást pár perc alatt egyszerűen lehet csinálni.\n                Csak a használandó mezőket kell kiválasztanunk, a kívánt vizualizációt és kész is.\n                Saját kimutatás syslog-ra:</p>\n                <img src={dashboard1} width=\"100%\"></img>\n                <img src={dashboard2} width=\"100%\"></img>\n            <p>A Logstash által kezelt pipeline-okat a <b>(Management / Ingest / Ingest Pipelines)</b> felün kezelhetjük.</p>\n            <img src={pipelines} width=\"100%\"></img>\n            <Alert variant='warning'><Alert.Heading as='h6'>Figyelem\n                </Alert.Heading>Az összehasonlító munka során csak a bemutatott füleket tanulmányoztuk át.\n                 Ám ezekkel a lehetőségek nem fogytak el. A jövőben több figyelmet kaphatnak az alábbiak:\n                 <ul>\n                     <li>\n                         Alerting rendszer\n                     </li>\n                     <li>\n                         Rollup Jobs\n                     </li>\n                     <li>\n                         Index lifecycle management\n                     </li>\n                     <li>\n                         Machine Learning\n                     </li>\n                     <li>\n                         Stb.\n                     </li>\n                     </ul></Alert>\n        <h3>Graylog</h3>\n        <p>\nA Graylog webes felületét alapértelmezetten, a 9000-es porton érhetjük el.\n</p>\n\n<img src={bej} width=\"60%\"></img>\n\n<p>Az első bejelentkezéshez a Graylog konfigurációjában megadott jelszóval léphetünk be, majd később tudunk hozzáadni user-eket. (bővebben lent) </p>\n\n<p>Bejelentkezés után ez fogad minket:</p>\n\n<img src={kezdolap} width=\"100%\"></img> <br></br>\n\n<br></br><p>Itt két dolgot láthatunk. Az egyik egy dashboard, ami azt mutatja meg, hogy hogyan alakultak dátum és darabszám szerint a beérkezett logok. November közepétől december közepéig keletkezett a rendszerben kb. 400.000 bejegyzés, majd később a december végét - január közepét felölelő időintervallumban kb 15.000 bejegyzés. </p>\n<p>Alul pedig időrendi sorrendben láthatjuk a logok tartalmát, és forrását.</p>\n       \n<p> A <b>Streams</b> fülön a létrehozott Graylog-folyamokat láthatjuk. </p>\n<p>A Graylog folyamok egy olyan mehanizmus alapján működnek, amely az üzeneteket valós időben kategóriákba irányítja feldolgozásuk közben.</p>\n<img src={stream} width=\"100%\"></img>\n\n\n<p className='mt-3'>Az <b>Alerts</b> fülön különféle riasztásokat definiálhatunk. Ha egy adott feltétel teljesül, az eseményként kerül tárolásra, és értesítések indítására használható. </p>\n<p>A Graylog alapértelmezett riasztási feltételekkel és értesítésekkel rendelkezik.</p>\n\n<p>A képen az látható, hogy egy értesítés lett létrehozva \"Error-Not\" néven, ami egy Email értesítő. Amennyiben egy log severity-je error, akkor emailben értesíti arról az admint. </p>\n<img src={alert_not1} width=\"100%\"></img>\n<img src={alert_not2} width=\"100%\"></img>\n\n<p className='mt-3'>Dashboards</p>\n\n<p>A dashboardok használatával előre definiált kereséseket lehet beépítani, hogy minden fontos adat számunkra egyetlen kattintással elérhető legyen. </p>\n<img src={dash_1} width=\"100%\"></img>\n\n<p className='mt-3'>Látható, hogy egy \"Filebeat Dashboards\" nevű irányítótábla létre lett hozva. Itt lehet csoportosítani a különféle dashboardokat.</p>\n\n<img src={dash_2} width=\"100%\"></img>\n\n<p className='mt-3'>Ezen a dashboardon az látszik, hogy a filebeat mely elérési utakból dolgozott a legtöbbet. (Top8) <br></br> \n\n<p>Mint láthatjuk, a logok több, mint 45%-a a var/log/syslog mappából származik, melyben a rendszer által generált logok találhatóak.</p>\n\n\n<img src={dash_3} width=\"100%\"></img>\n\n<p className='mt-3'>  A dashboardokat különböző filterekkel állíthatjuk elő.  Előszőr ki kell választani, hogy milyen Field szerint csoportosítsa a logokat. A képen látható dashboard éppen a facility-k szerint csoportosít.</p> \n<p>A Metrics fülön beállíthatjuk, hogy mit csináljon ezekkel a logokkal. Jelen esetben a Count, azaz az összeszámlálás metrika van beállítva.</p>\n<p>A Visualzation fülön azt tudjuk kiválasztani, hogy a kiszűrt adatokat milyen módon jelenítsük meg. A legnépszerűbbek közé tartozik az oszlopdiagramm, vagy a kördiagramm </p>\n\n\n<h5>Inputs</h5><br></br>\n\n<p>Az Input fülön adhatunk meg olyan bemeneteket, amik a naplóüzenetek elfogadásáért felelnek. </p>\n\n<img src={inputs_1} width=\"100%\"></img>\n\n<p className='mt-3'>Látható, hogy egy beats input fut, ami fogadja a logokat a filebeattől.</p>\n\n<p>Amennyiben rámegyünk a Show Received messages gombra, jól láható, hogy megkapja a graylog a filebeattől az üzeneteket.</p>\n<img src={beats_inupt2} width=\"100%\"></img>\n\n\n<h5 className='mt-3'>Felhasználó kezelés</h5>\n\n<p>A Felhasználó szakasz a meglévő felhasználók listáját jeleníti meg, beleértve a gyors áttekintéshez hasznos további információkat is.</p>\n\n\n<img src={user_overw} width=\"100%\"></img>\n\n<p>A Create User gombra kattintva felvehetünk új felhasználót. </p>\n<img src={user_create} width=\"70%\"></img>\n<p> Következő belépéskor a megadott felhasználónévvel és jelszóval is be tud lépni az adott felhasználó.</p>\n\n<p> Az Edit Role fülön a szerepköröket tudjuk módosítani. Ha azt szeretnénk, hogy az újonnan felvitt test usernek csak Dashboard Creator joga legyen, akkor ehhez a szerepkörhöz hozzá tudjuk adni ezt a felhasználót. </p>\n\n\n\n<Alert variant='warning'><Alert.Heading as='h6'>Figyelem\n                </Alert.Heading>Az összehasonlító munka során csak a bemutatott füleket tanulmányoztuk át.\n                 Ám ezekkel a lehetőségek nem fogytak el. A jövőben több figyelmet kaphatnak az alábbiak:\n                 <ul>\n                     <li>\n                         Pipelines\n                     </li>\n                     <li>\n                         Sidecars\n                     </li>\n                     <li>\n                          Collectors\n                     </li>\n                    \n                     \n                     </ul></Alert>\n\n\n\n\n</p>\n\n\n    </Container>\n    )\n}\nexport default Usermanual","export default __webpack_public_path__ + \"static/media/user_testuser.c8f62711.JPG\";","import React from \"react\";\nimport { Routes, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\nimport Introduction from \"./pages/Introduction\";\nimport Dev from \"./pages/Dev\";\nimport Problem from \"./pages/Problem\";\nimport Summary from \"./pages/Summary\";\nimport Tech from \"./pages/Tech\";\nimport Timeline from \"./pages/Timeline\";\nimport Usermanual from \"./pages/Usermanual\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Navigation />\n      <Routes>\n        <Route exact path='/' element={<Introduction />} />\n        <Route path='/problem' element={<Problem />} />\n        <Route path='/tech' element={<Tech />} />\n        <Route path='/usermanual' element={<Usermanual />} />\n        <Route path='/dev' element={<Dev />} />\n        <Route path='/timeline' element={<Timeline />} />\n        <Route path='/summary' element={<Summary />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/temalabor-o21-I-NEW-Centralized-log-server/'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}